version: '3.7'

services:
<<<<<<< HEAD

  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - '.:/app'
    ports:
      - 5001:5000
    environment:
      - FLASK_APP=./app.py
      - FLASK_ENV=development
    depends_on:
      - db
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - 5433:5432
    volumes:
      - .pgdata:/var/lib/postgresql/data
    
=======
  db:
    image: postgres:10.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  backend:
    build: .
    command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - 8000:8000
    depends_on:
      - db
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    command: npm run dev
    ports:
      - 8080:8080
    depends_on:
      - backend
    volumes:
      - ./admin:/gtszoffice-admin
    stdin_open: true
    tty: true
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  postgres_data:
>>>>>>> 42a4e7f2fa93e8c2c966ec73229b5d80bd9c4504
